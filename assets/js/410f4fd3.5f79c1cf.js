"use strict";(self.webpackChunkdebian_2=self.webpackChunkdebian_2||[]).push([[97],{1724:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>t});var a=i(4848),l=i(8453);const s={sidebar_label:"Wifi management",sidebar_position:4,id:"wifi",title:"Wifi management",slug:"/wifi-management",pagination_next:null,pagination_prev:null},c="Wifi management",r={id:"wifi",title:"Wifi management",description:"Network Manager package",source:"@site/docs/wifi.md",sourceDirName:".",slug:"/wifi-management",permalink:"/debian/wifi-management",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Wifi management",sidebar_position:4,id:"wifi",title:"Wifi management",slug:"/wifi-management",pagination_next:null,pagination_prev:null},sidebar:"tutorialSidebar"},d={},t=[{value:"Network Manager package",id:"network-manager-package",level:2},{value:"Network Manager client nmcli",id:"network-manager-client-nmcli",level:2},{value:"Wireless Device Management using iw",id:"wireless-device-management-using-iw",level:2},{value:"Wireless Configuration using iwconfig",id:"wireless-configuration-using-iwconfig",level:2},{value:"IP Address Management",id:"ip-address-management",level:2},{value:"Scan for Wireless Networks using iwlist",id:"scan-for-wireless-networks-using-iwlist",level:2},{value:"PCI Device Information",id:"pci-device-information",level:2},{value:"Configure WPA Supplicant",id:"configure-wpa-supplicant",level:2},{value:"Hash WPA Supplicant password",id:"hash-wpa-supplicant-password",level:2},{value:"WPA Supplicant Commands",id:"wpa-supplicant-commands",level:2},{value:"DHCP Client",id:"dhcp-client",level:2},{value:"Configure Network Interface old way",id:"configure-network-interface-old-way",level:2},{value:"Set Default Gateway old way",id:"set-default-gateway-old-way",level:2},{value:"RF Kill List",id:"rf-kill-list",level:2},{value:"Load and Unload Drivers",id:"load-and-unload-drivers",level:2},{value:"List loaded modules",id:"list-loaded-modules",level:2},{value:"Blacklist a driver",id:"blacklist-a-driver",level:2},{value:"Reload udev rules for device management",id:"reload-udev-rules-for-device-management",level:2},{value:"Restart networking service",id:"restart-networking-service",level:2},{value:"Display ARP cache",id:"display-arp-cache",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"wifi-management",children:"Wifi management"})}),"\n",(0,a.jsx)(n.h2,{id:"network-manager-package",children:"Network Manager package"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"apt-get install network-manager-gnome\nsystemctl restart NetworkManager\nsystemctl restart NetworkManager\nsystemctl status NetworkManager\n"})}),"\n",(0,a.jsx)(n.h2,{id:"network-manager-client-nmcli",children:"Network Manager client nmcli"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'nmcli device\nnmcli device status\nnmcli device set wlp2s0 managed yes\nnmcli device wifi list\nnmcli device wifi connect "SSID" password "your_password"\nnmcli device wifi connect "SSID" --ask\nnmcli radio wifi on\nnmcli radio all\nnmcli connection show\nnmcli connection show "connection_name"\nnmcli connection show "connection_name" --details\nnmcli connection add type wifi ifname wlan0 ssid "New_SSID"\nnmcli connection modify "connection_name" 802-11-wireless.ssid "New_SSID"\nnmcli connection modify "connection_name" ipv4.addresses 192.168.1.10/24\nnmcli connection modify "connection_name" ipv4.gateway 192.168.1.1\nnmcli connection modify "connection_name" ipv4.dns "8.8.8.8"\nnmcli connection modify "connection_name" ipv4.method manual\nnmcli connection up "connection_name"\nnmcli connection down "connection_name"\nnmcli connection delete "connection_name"\nnmcli connection export\nnmcli connection import\nnmcli -f ALL connection show --active\n\n'})}),"\n",(0,a.jsx)(n.h2,{id:"wireless-device-management-using-iw",children:"Wireless Device Management using iw"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"iw dev\niw dev <interface> link\niw dev <interface> scan\niw dev <interface> connect <SSID>\niw dev <interface> disconnect\niw dev <interface> set power_save on\niw dev <interface> set type ibss\niw dev <interface> set freq <frequency>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"wireless-configuration-using-iwconfig",children:"Wireless Configuration using iwconfig"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'iwconfig\niwconfig [interface] essid "YourNetworkName"\niwconfig [interface] mode [mode_type]\niwconfig [interface] freq [frequency]\niwconfig [interface] channel [channel_number]\niwconfig [interface] key [encryption_key]\niwconfig [interface] power off\niwconfig [interface] power on\niwconfig wlan0 essid "MyNetwork" mode Managed\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ip-address-management",children:"IP Address Management"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ip link show\nip addr add 192.168.1.10/24 dev wlan0\nip addr del 192.168.1.10/24 dev wlan0\nip addr flush dev wlan0\nip link set wlan0 up\nip link set wlan0 down\nip addr show\nip addr show wlan0\nip route add default via 192.168.1.1\nip route add default via 192.168.1.1 dev wlan0\nip route show\nip route flush\n"})}),"\n",(0,a.jsx)(n.h2,{id:"scan-for-wireless-networks-using-iwlist",children:"Scan for Wireless Networks using iwlist"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"iwlist wlp2s0 scan\n"})}),"\n",(0,a.jsx)(n.h2,{id:"pci-device-information",children:"PCI Device Information"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"lspci -nn|grep -i network\nlspci -k -s 02:00.0\nmodinfo <driver_name>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configure-wpa-supplicant",children:"Configure WPA Supplicant"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat /etc/wpa_supplicant/wpa_supplicant.conf\nnetwork={\n  ssid="SSID_NAME"\n  psk="NETWORK_KEY_IN_CLEAR"\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"hash-wpa-supplicant-password",children:"Hash WPA Supplicant password"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wpa_passphrase <MYSSID> <YOURPASSWORD>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"wpa-supplicant-commands",children:"WPA Supplicant Commands"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'wpa_supplicant -B -i wlp3s0 -c /etc/wpa_supplicant/wpa_supplicant.conf\nwpa_cli status\nwpa_cli scan\nwpa_cli scan_results\nwpa_cli add_network\nwpa_cli set_network <network_id> ssid "<SSID>"\nwpa_cli set_network <network_id> psk "<password>"\nwpa_cli enable_network <network_id>\nwpa_cli save_config\nwpa_cli reassociate\nwpa_cli list_networks\nwpa_cli terminate\n'})}),"\n",(0,a.jsx)(n.h2,{id:"dhcp-client",children:"DHCP Client"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dhclient wlp3s0 \ndhclient -r wlp3s0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configure-network-interface-old-way",children:"Configure Network Interface old way"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ifconfig wlp3s0 192.168.1.10 netmask 255.255.255.0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"set-default-gateway-old-way",children:"Set Default Gateway old way"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"route add default gw 192.168.1.1\nroute -n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rf-kill-list",children:"RF Kill List"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"rfkill list\n"})}),"\n",(0,a.jsx)(n.h2,{id:"load-and-unload-drivers",children:"Load and Unload Drivers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"modprobe driver\nmodprobe -r driver\n"})}),"\n",(0,a.jsx)(n.h2,{id:"list-loaded-modules",children:"List loaded modules"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"lsmod\n"})}),"\n",(0,a.jsx)(n.h2,{id:"blacklist-a-driver",children:"Blacklist a driver"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'echo "blacklist <driver_name>" | sudo tee -a /etc/modprobe.d/blacklist.conf\n'})}),"\n",(0,a.jsx)(n.h2,{id:"reload-udev-rules-for-device-management",children:"Reload udev rules for device management"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"udevadm control --reload-rules\n"})}),"\n",(0,a.jsx)(n.h2,{id:"restart-networking-service",children:"Restart networking service"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart networking\n"})}),"\n",(0,a.jsx)(n.h2,{id:"display-arp-cache",children:"Display ARP cache"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"arp -a\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var a=i(6540);const l={},s=a.createContext(l);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);